{"version":3,"file":"static/js/325.e3f201cc.chunk.js","mappings":"gQAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,6EACc,sCACA,4CAFd,SAIyBC,EAAAA,EAAAA,IAAA,UAHX,uCAGW,OAFX,4CAEW,kBACMD,IAC1BE,MAAK,SAAUC,GACd,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,GAElB,OAAOA,EAASG,IACjB,IACAC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,EACf,IAdL,cAIQL,EAJR,yBAgBSA,GAhBT,kEAmBA,M,SAnBgC,GAAjBJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECDf,EAAuB,qBAAvB,EAAoD,sBAApD,EAAmF,uBAAnF,EAAiH,qBAAjH,EAA6I,qBAA7I,EAA6K,yBAA7K,EAA6M,qB,SC6E7M,EAxEe,WACb,OAA0BW,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAA0CD,EAAAA,EAAAA,UAAS,IAAnD,eAAOE,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,aAC7BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJJ,GACFlB,EAAiBkB,EAAUK,QAAQpB,MAAK,SAAAC,GAAQ,OAC9CU,EAAiBV,EAASoB,QADoB,GAInD,GAAE,CAACN,IAsBJ,OACE,6BACE,kBAAMO,SAjBW,SAAAC,GACnBA,EAAIC,iBAEU,KAAV1B,IAIJgB,EAAgB,CAAEC,UAAWjB,EAAMsB,SACnCvB,EAAiBkB,GAAWf,MAAK,SAAAC,GAAQ,OACvCU,EAAiBV,EAASoB,QADa,IAIzCZ,EAAS,IACV,EAIiCgB,UAAWC,EAAzC,WACE,4BACE,kBACEC,KAAK,OACLC,MAAO9B,EACP+B,SA3BW,SAAAN,GACnB,IAAMzB,EAAQyB,EAAIO,OAAOF,MACzBnB,EAASX,EACV,EAyBS2B,UAAWC,OAGf,mBAAQD,UAAWC,EAAnB,4BAGF,eAAID,UAAWC,EAAf,SAC4B,IAAzBhB,EAAcqB,OACbrB,EAAcsB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAChB,eAAIV,UAAWC,EAAf,UACE,UAAC,KAAD,CAAMU,GAAE,UAAKH,GAAeI,MAAO,CAAEC,KAAMrB,GAAYQ,UAAWC,EAAlE,UACGS,IACC,gBACEI,IAAG,yCAAoCJ,GACvCK,IAAI,MAGR,cAAGf,UAAWC,EAAd,SAA6BQ,MAPPD,IAFV,KAclB,qBAKT,C","sources":["utils/fetchSearchMovie.js","webpack://react-homework-05-movies/./src/Pages/Movies.module.css?1ace","Pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchSearchMovie(query) {\n  const URL = '//api.themoviedb.org/3/search/movie';\n  const KEY = '?api_key=4278d0f19129b6ab2e3afba6e510ceec';\n\n  const response = await axios\n    .get(`${URL}${KEY}&query=${query}`)\n    .then(function (response) {\n      if (response.status !== 200) {\n        throw new Error(response);\n      }\n      return response.data;\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  \n  return response;\n}\n\nexport default fetchSearchMovie;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__ZkZ-n\",\"input\":\"Movies_input__+e2q1\",\"button\":\"Movies_button__pQtlh\",\"list\":\"Movies_list__N4cpC\",\"item\":\"Movies_item__8ru0h\",\"filmName\":\"Movies_filmName__xmREK\",\"link\":\"Movies_link__FKpUP\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport fetchSearchMovie from 'utils/fetchSearchMovie';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieName) {\n      fetchSearchMovie(movieName.trim()).then(response =>\n        setSearchResults(response.results)\n      );\n    }\n  }, [movieName]);\n\n  const handleChange = evt => {\n    const query = evt.target.value;\n    setQuery(query);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (query === '') {\n      return;\n    }\n\n    setSearchParams({ movieName: query.trim() });\n    fetchSearchMovie(movieName).then(response =>\n      setSearchResults(response.results)\n    );\n\n    setQuery('');\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label>\n          <input\n            type=\"text\"\n            value={query}\n            onChange={handleChange}\n            className={css.input}\n          />\n        </label>\n        <button className={css.button}>Find Movie</button>\n      </form>\n\n      <ul className={css.list}>\n        {searchResults.length !== 0 ? (\n          searchResults.map(({ id, title, poster_path }) => (\n            <li className={css.item}>\n              <Link to={`${id}`} key={id} state={{ from: location }} className={css.link}>\n                {poster_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                    alt=\"\"\n                  />\n                )}\n                <p className={css.filmName}>{title}</p>\n              </Link>\n            </li>\n          ))\n        ) : (\n          <p></p>\n        )}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchSearchMovie","query","axios","then","response","status","Error","data","catch","error","console","useState","setQuery","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","trim","results","onSubmit","evt","preventDefault","className","css","type","value","onChange","target","length","map","id","title","poster_path","to","state","from","src","alt"],"sourceRoot":""}