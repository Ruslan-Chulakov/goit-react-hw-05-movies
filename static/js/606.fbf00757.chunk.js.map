{"version":3,"file":"static/js/606.fbf00757.chunk.js","mappings":"wPAEeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gFACUC,EADV,6CACsDD,EADtD,YAEgB,4CAFhB,SAGyBE,EAAAA,EAAAA,IAAA,UAEhBD,GAFgB,OADT,8CAKXE,MAAK,SAAUC,GACd,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,GAElB,OAAOA,EAASG,IACjB,IACAC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,EACf,IAfL,cAGQL,EAHR,yBAgBSA,GAhBT,kEAmBA,M,SAnByB,GAAVL,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECDf,EAAuB,mBAAvB,EAAiD,mB,SC+BjD,EAzBa,WACT,OAAwBY,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAYC,EAAAA,EAAAA,MAAZD,QAMN,OAJFE,EAAAA,EAAAA,YAAU,WACRjB,EAAUe,GAASX,MAAK,SAAAC,GAAQ,OAAIS,EAAQT,EAASQ,KAArB,GACjC,GAAE,CAACE,KAGA,eAAIG,UAAWC,EAAf,SACGN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMrB,EAAvB,EAAuBA,GAAvB,OACR,gBAAaiB,UAAWC,EAAxB,UACGE,IACC,gBACEE,IAAG,yCAAoCF,GACvCG,IAAKF,KAGT,uBAAIA,MAPGrB,EADD,KAajB,C","sources":["utils/fetchCast.js","webpack://react-homework-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchCast(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n    const KEY = '?api_key=4278d0f19129b6ab2e3afba6e510ceec';\n  const response = await axios\n    .get(\n      `${URL}${KEY}`\n    )\n    .then(function (response) {\n      if (response.status !== 200) {\n        throw new Error(response);\n      }\n      return response.data;\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  return response;\n}\n\nexport default fetchCast;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\"};","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport fetchCast from \"utils/fetchCast\";\nimport css from './Cast.module.css';\n\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n  const { movieId } = useParams()\n  \n  useEffect(() => {\n    fetchCast(movieId).then(response => setCast(response.cast))\n  }, [movieId]);\n  \n    return (\n      <ul className={css.list}>\n        {cast.map(({ profile_path, name, id }) => (\n          <li key={id} className={css.item}>\n            {profile_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n            )}\n            <p>{name}</p>\n          </li>\n        ))}\n      </ul>\n    );\n}\n\nexport default Cast;"],"names":["fetchCast","id","URL","axios","then","response","status","Error","data","catch","error","console","useState","cast","setCast","movieId","useParams","useEffect","className","css","map","profile_path","name","src","alt"],"sourceRoot":""}